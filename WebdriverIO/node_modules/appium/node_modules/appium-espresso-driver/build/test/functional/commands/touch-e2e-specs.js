'use strict';

var _toConsumableArray = require('babel-runtime/helpers/to-consumable-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

// TODO: Add missing client features to admc/wd

describe('touch actions -', function () {
  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  var sessionId = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(_desired.APIDEMO_CAPS));

        case 2:
          driver = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.getSessionId());

        case 5:
          sessionId = context$2$0.sent;

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  function startListActivity() {
    return _regeneratorRuntime.async(function startListActivity$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity({
            appActivity: '.view.List5',
            appPackage: 'io.appium.android.apis'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function startFingerPaintActivity() {
    return _regeneratorRuntime.async(function startFingerPaintActivity$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity({
            appActivity: '.graphics.FingerPaint',
            appPackage: 'io.appium.android.apis'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function startSplitTouchActivity() {
    return _regeneratorRuntime.async(function startSplitTouchActivity$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity({
            appActivity: '.view.SplitTouchView',
            appPackage: 'io.appium.android.apis'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function startDragAndDropActivity() {
    return _regeneratorRuntime.async(function startDragAndDropActivity$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity({
            appActivity: '.view.DragAndDropDemo',
            appPackage: 'io.appium.android.apis'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function startTextSwitcherActivity() {
    return _regeneratorRuntime.async(function startTextSwitcherActivity$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.startActivity({
            appActivity: '.view.TextSwitcher1',
            appPackage: 'io.appium.android.apis'
          }));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function getScrollData() {
    var els, startEl, _ref, startX, startY, endEl, _ref2, endX, endY;

    return _regeneratorRuntime.async(function getScrollData$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementsByClassName('android.widget.TextView'));

        case 2:
          els = context$2$0.sent;
          startEl = els[els.length - 3];
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(startEl.getLocation());

        case 6:
          _ref = context$2$0.sent;
          startX = _ref.x;
          startY = _ref.y;
          endEl = _lodash2['default'].first(els);
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(endEl.getLocation());

        case 12:
          _ref2 = context$2$0.sent;
          endX = _ref2.x;
          endY = _ref2.y;
          return context$2$0.abrupt('return', { startX: startX, startY: startY, endX: endX, endY: endY, startEl: startEl, endEl: endEl });

        case 16:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  function assertScroll() {
    return _regeneratorRuntime.async(function assertScroll$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='Abbaye de Belloc']").should.eventually.be.rejectedWith(/NoSuchElement/));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  }

  var idCounter = 0;

  var performTouchAction = function performTouchAction() {
    var actionsRoot,
        _iteratorNormalCompletion,
        _didIteratorError,
        _iteratorError,
        _len,
        actionsArrays,
        _key,
        _iterator,
        _step,
        actions,
        args$2$0 = arguments;

    return _regeneratorRuntime.async(function performTouchAction$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          actionsRoot = [];
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          context$2$0.prev = 4;

          for (_len = args$2$0.length, actionsArrays = Array(_len), _key = 0; _key < _len; _key++) {
            actionsArrays[_key] = args$2$0[_key];
          }

          for (_iterator = _getIterator(actionsArrays); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            actions = _step.value;

            actionsRoot.push({
              type: 'pointer',
              id: 'id_' + idCounter++,
              parameters: {
                pointerType: 'touch'
              },
              actions: actions
            });
          }

          context$2$0.next = 13;
          break;

        case 9:
          context$2$0.prev = 9;
          context$2$0.t0 = context$2$0['catch'](4);
          _didIteratorError = true;
          _iteratorError = context$2$0.t0;

        case 13:
          context$2$0.prev = 13;
          context$2$0.prev = 14;

          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }

        case 16:
          context$2$0.prev = 16;

          if (!_didIteratorError) {
            context$2$0.next = 19;
            break;
          }

          throw _iteratorError;

        case 19:
          return context$2$0.finish(16);

        case 20:
          return context$2$0.finish(13);

        case 21:
          context$2$0.next = 23;
          return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
            method: 'POST',
            uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/actions',
            body: { actions: actionsRoot },
            json: true
          }));

        case 23:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[4, 9, 13, 21], [14,, 16, 20]]);
  };

  describe('fingerpaint', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          beforeEach(startFingerPaintActivity);

          it('should draw the letter L on fingerpaint', function callee$2$0() {
            var canvas, _ref3, x, y, _ref4, height, width, startX, startY, endX, endY, touchActions;

            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.elementById("android:id/content"));

                case 2:
                  canvas = context$3$0.sent;
                  context$3$0.next = 5;
                  return _regeneratorRuntime.awrap(canvas.getLocation());

                case 5:
                  _ref3 = context$3$0.sent;
                  x = _ref3.x;
                  y = _ref3.y;
                  context$3$0.next = 10;
                  return _regeneratorRuntime.awrap(canvas.getSize());

                case 10:
                  _ref4 = context$3$0.sent;
                  height = _ref4.height;
                  width = _ref4.width;
                  startX = x + 10;
                  startY = y + 10;
                  endX = x + width - 10;
                  endY = y + Math.round(height / 2);
                  touchActions = [{ type: "pointerMove", duration: 1000, x: startX, y: startY }, { type: "pointerDown", button: 0 }, { type: "pointerMove", duration: 1000, x: startX, y: endY }, { type: "pause", duration: 1000 }, { type: "pointerMove", duration: 1000, x: endX, y: endY }, { type: "pointerCancel", button: 0 }];
                  context$3$0.next = 20;
                  return _regeneratorRuntime.awrap(performTouchAction(touchActions));

                case 20:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

          it('should draw two parallel lines on fingerpaint', function callee$2$0() {
            var canvas, _ref5, x, y, _ref6, height, width, touchActions;

            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.elementById("android:id/content"));

                case 2:
                  canvas = context$3$0.sent;
                  context$3$0.next = 5;
                  return _regeneratorRuntime.awrap(canvas.getLocation());

                case 5:
                  _ref5 = context$3$0.sent;
                  x = _ref5.x;
                  y = _ref5.y;
                  context$3$0.next = 10;
                  return _regeneratorRuntime.awrap(canvas.getSize());

                case 10:
                  _ref6 = context$3$0.sent;
                  height = _ref6.height;
                  width = _ref6.width;
                  touchActions = [10, width - 10].reduce(function (touchActions, xOffset) {
                    touchActions.push([{ type: "pointerMove", x: x + xOffset, y: y + 10 }, { type: "pointerDown", button: 0 }, { type: "pointerMove", duration: 2000, x: x + xOffset, y: y + Math.round(height / 2) }, { type: "pointerUp", button: 0 }]);
                    return touchActions;
                  }, []);
                  context$3$0.next = 16;
                  return _regeneratorRuntime.awrap(performTouchAction.apply(undefined, _toConsumableArray(touchActions)));

                case 16:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  describe('scrolling/swiping', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          describe('single', function () {
            beforeEach(startListActivity);

            it('should scroll up menu', function callee$3$0() {
              var _ref7, startX, startY, endX, endY, actions;

              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(getScrollData());

                  case 2:
                    _ref7 = context$4$0.sent;
                    startX = _ref7.startX;
                    startY = _ref7.startY;
                    endX = _ref7.endX;
                    endY = _ref7.endY;
                    actions = [{ type: "pointerMove", duration: 0, x: startX + 5, y: startY + 5 }, { type: "pointerDown", button: 0 }, { type: "pointerMove", duration: 200, x: endX + 5, y: endY + 5 }, { type: "pointerUp", button: 0 }];
                    context$4$0.next = 10;
                    return _regeneratorRuntime.awrap(performTouchAction(actions));

                  case 10:
                    context$4$0.next = 12;
                    return _regeneratorRuntime.awrap(assertScroll());

                  case 12:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, this);
            });

            it('should swipe up menu', function callee$3$0() {
              var _ref8, startX, startY, endX, endY, actions;

              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(getScrollData());

                  case 2:
                    _ref8 = context$4$0.sent;
                    startX = _ref8.startX;
                    startY = _ref8.startY;
                    endX = _ref8.endX;
                    endY = _ref8.endY;
                    actions = [{ type: "pointerMove", duration: 0, x: startX + 5, y: startY + 5 }, { type: "pointerDown", button: 0 }, { type: "pointerMove", duration: 100, x: endX + 5, y: endY + 5 }, { type: "pointerUp", button: 0 }];
                    context$4$0.next = 10;
                    return _regeneratorRuntime.awrap(performTouchAction(actions));

                  case 10:
                    context$4$0.next = 12;
                    return _regeneratorRuntime.awrap(assertScroll());

                  case 12:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, this);
            });
          });

          describe('multiple', function () {
            beforeEach(startSplitTouchActivity);
            it('should do multiple scrolls on multiple views', function callee$3$0() {
              var els, actions;
              return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
                while (1) switch (context$4$0.prev = context$4$0.next) {
                  case 0:
                    context$4$0.next = 2;
                    return _regeneratorRuntime.awrap(driver.elementsByClassName('android.widget.ListView'));

                  case 2:
                    els = context$4$0.sent;
                    context$4$0.next = 5;
                    return _regeneratorRuntime.awrap(_bluebird2['default'].map(els, function callee$4$0(el) {
                      var _ref9, height, yMove, action;

                      return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                        while (1) switch (context$5$0.prev = context$5$0.next) {
                          case 0:
                            context$5$0.next = 2;
                            return _regeneratorRuntime.awrap(el.getSize());

                          case 2:
                            _ref9 = context$5$0.sent;
                            height = _ref9.height;
                            yMove = Math.round(height / 2) - 10;
                            action = [{ type: "pointerMove", origin: { "element-6066-11e4-a52e-4f735466cecf": el.value } }, { type: "pointerDown", button: 0 }, { type: "pointerMove", origin: { "element-6066-11e4-a52e-4f735466cecf": el.value }, x: 10, y: -yMove, duration: 3000 }, { type: "pointerMove", origin: "pointer", x: 10, y: -yMove, duration: 3000 }, { type: "pointerUp", button: 0 }];
                            return context$5$0.abrupt('return', action);

                          case 7:
                          case 'end':
                            return context$5$0.stop();
                        }
                      }, null, this);
                    }));

                  case 5:
                    actions = context$4$0.sent;
                    context$4$0.next = 8;
                    return _regeneratorRuntime.awrap(performTouchAction.apply(undefined, _toConsumableArray(actions)));

                  case 8:
                  case 'end':
                    return context$4$0.stop();
                }
              }, null, this);
            });
          });

          it('should swipe on drag and drop', function callee$2$0() {
            var el, _ref10, x, y, touchActions;

            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(startDragAndDropActivity());

                case 2:
                  context$3$0.next = 4;
                  return _regeneratorRuntime.awrap(driver.elementById("io.appium.android.apis:id/drag_dot_1"));

                case 4:
                  el = context$3$0.sent;
                  context$3$0.next = 7;
                  return _regeneratorRuntime.awrap(el.getLocation());

                case 7:
                  _ref10 = context$3$0.sent;
                  x = _ref10.x;
                  y = _ref10.y;
                  touchActions = [{ type: "pointerMove", duration: 0, x: x + 30, y: y + 30 }, { type: "pointerDown", button: 0 }, { type: "pointerMove", duration: 100, x: x + 10, y: y + 10 }, { type: "pointerUp", button: 0 }];
                  context$3$0.next = 13;
                  return _regeneratorRuntime.awrap(performTouchAction(touchActions));

                case 13:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  describe('touches', function callee$1$0() {
    var nextEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          nextEl = undefined;

          beforeEach(function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(startTextSwitcherActivity());

                case 2:
                  context$3$0.next = 4;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='0']").should.eventually.exist);

                case 4:
                  context$3$0.next = 6;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.be.rejectedWith(/NoSuchElement/));

                case 6:
                  context$3$0.next = 8;
                  return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Next'));

                case 8:
                  nextEl = context$3$0.sent;

                case 9:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should touch down and up', function callee$2$0() {
            var _ref11, x, y, touchActions;

            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(nextEl.getLocation());

                case 2:
                  _ref11 = context$3$0.sent;
                  x = _ref11.x;
                  y = _ref11.y;
                  touchActions = [{ type: "pointerMove", duration: 100, x: x + 10, y: y + 10 }, { type: "pointerDown", button: 0 }, { type: "pause", duration: 3000 }, { type: "pointerUp", button: 0 }];
                  context$3$0.next = 8;
                  return _regeneratorRuntime.awrap(performTouchAction(touchActions));

                case 8:
                  context$3$0.next = 10;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

                case 10:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

          it('should touch down and up on an element by id', function callee$2$0() {
            var touchActions;
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  touchActions = [{ type: "pointerMove", duration: 0, origin: { "element-6066-11e4-a52e-4f735466cecf": nextEl.value } }, { type: "pointerDown", button: 0 }, { type: "pause", duration: 100 }, { type: "pointerUp", button: 0 }];
                  context$3$0.next = 3;
                  return _regeneratorRuntime.awrap(performTouchAction(touchActions));

                case 3:
                  context$3$0.next = 5;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

                case 5:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  describe('mjsonwp touch actions', function () {
    describe('touch', function () {
      var nextEl = undefined;

      beforeEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(startTextSwitcherActivity());

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='0']").should.eventually.exist);

            case 4:
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.be.rejectedWith(/NoSuchElement/));

            case 6:
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Next'));

            case 8:
              nextEl = context$4$0.sent;

            case 9:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      it('should do touch/click event', function callee$3$0() {
        var _nextEl, elementId;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              _nextEl = nextEl;
              elementId = _nextEl.value;
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/click',
                body: {
                  element: elementId
                },
                json: true
              }));

            case 4:
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      it('should do touch/longclick event', function callee$3$0() {
        var _nextEl2, elementId;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              _nextEl2 = nextEl;
              elementId = _nextEl2.value;
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/longclick',
                body: {
                  element: elementId
                },
                json: true
              }));

            case 4:
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

            case 6:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      it('should do touch/doubleclick event', function callee$3$0() {
        var _nextEl3, elementId;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='2']").should.eventually.be.rejectedWith(/NoSuchElement/));

            case 2:
              _nextEl3 = nextEl;
              elementId = _nextEl3.value;
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/doubleclick',
                body: {
                  element: elementId
                },
                json: true
              }));

            case 6:
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

            case 8:
              context$4$0.next = 10;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='2']").should.eventually.exist);

            case 10:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      it('should touch down at a location and then touch up', function callee$3$0() {
        var _ref12, x, y;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(nextEl.getLocation());

            case 2:
              _ref12 = context$4$0.sent;
              x = _ref12.x;
              y = _ref12.y;
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/down',
                body: {
                  x: x + 1,
                  y: y + 1
                },
                json: true
              }));

            case 7:
              context$4$0.next = 9;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

            case 9:
              context$4$0.next = 11;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/up',
                body: {
                  x: x + 1,
                  y: y + 1
                },
                json: true
              }));

            case 11:
              context$4$0.next = 13;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

            case 13:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
    });

    describe('move', function () {
      beforeEach(startListActivity);

      it('should touch down, move, touch up and cause a scroll event', function callee$3$0() {
        var _ref13, startX, startY, endX, endY;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(getScrollData());

            case 2:
              _ref13 = context$4$0.sent;
              startX = _ref13.startX;
              startY = _ref13.startY;
              endX = _ref13.endX;
              endY = _ref13.endY;
              context$4$0.next = 9;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/down',
                body: {
                  x: startX + 1,
                  y: startY + 1
                },
                json: true
              }));

            case 9:
              context$4$0.next = 11;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

            case 11:
              context$4$0.next = 13;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/move',
                body: {
                  x: endX + 1,
                  y: endY + 1
                },
                json: true
              }));

            case 13:
              context$4$0.next = 15;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

            case 15:
              context$4$0.next = 17;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/up',
                body: {
                  x: endX + 1,
                  y: endY + 1
                },
                json: true
              }));

            case 17:
              context$4$0.next = 19;
              return _regeneratorRuntime.awrap(assertScroll());

            case 19:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      it('should scroll on an element', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap((0, _requestPromise2['default'])({
                method: 'POST',
                uri: 'http://' + _helpersSession.HOST + ':' + _helpersSession.PORT + '/wd/hub/session/' + sessionId + '/touch/scroll',
                body: {
                  //element: el.value,
                  x: 0,
                  y: -300
                },
                json: true
              }));

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(1000));

            case 4:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
    });
  });

  describe('mjsonwp touch actions', function () {
    describe('multi touch actions', function () {
      var nextEl = undefined;

      beforeEach(function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(startTextSwitcherActivity());

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='0']").should.eventually.exist);

            case 4:
              context$4$0.next = 6;
              return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.be.rejectedWith(/NoSuchElement/));

            case 6:
              context$4$0.next = 8;
              return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Next'));

            case 8:
              nextEl = context$4$0.sent;

            case 9:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });

      var _arr = ['tap', 'press', 'longPress'];

      var _loop = function () {
        var method = _arr[_i];
        it('should perform single ' + method + ' actions on an element', function callee$4$0() {
          var action, multiAction;
          return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
            while (1) switch (context$5$0.prev = context$5$0.next) {
              case 0:
                action = new _wd2['default'].TouchAction();

                action[method]({ el: nextEl });

                multiAction = new _wd2['default'].MultiAction(driver);

                multiAction.add(action);
                context$5$0.next = 6;
                return _regeneratorRuntime.awrap(multiAction.perform());

              case 6:
                context$5$0.next = 8;
                return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

              case 8:
              case 'end':
                return context$5$0.stop();
            }
          }, null, this);
        });

        it('should perform single ' + method + ' actions', function callee$4$0() {
          var _ref14, x, y, action, multiAction;

          return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
            while (1) switch (context$5$0.prev = context$5$0.next) {
              case 0:
                context$5$0.next = 2;
                return _regeneratorRuntime.awrap(nextEl.getLocation());

              case 2:
                _ref14 = context$5$0.sent;
                x = _ref14.x;
                y = _ref14.y;
                action = new _wd2['default'].TouchAction();

                action[method]({ x: x + 10, y: y + 10 });

                multiAction = new _wd2['default'].MultiAction(driver);

                multiAction.add(action);
                context$5$0.next = 11;
                return _regeneratorRuntime.awrap(multiAction.perform());

              case 11:
                context$5$0.next = 13;
                return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

              case 13:
              case 'end':
                return context$5$0.stop();
            }
          }, null, this);
        });
      };

      for (var _i = 0; _i < _arr.length; _i++) {
        _loop();
      }
    });

    describe('touch actions', function () {
      describe('tap/press/longPress', function () {
        var nextEl = undefined;

        beforeEach(function callee$4$0() {
          return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
            while (1) switch (context$5$0.prev = context$5$0.next) {
              case 0:
                context$5$0.next = 2;
                return _regeneratorRuntime.awrap(startTextSwitcherActivity());

              case 2:
                context$5$0.next = 4;
                return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='0']").should.eventually.exist);

              case 4:
                context$5$0.next = 6;
                return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.be.rejectedWith(/NoSuchElement/));

              case 6:
                context$5$0.next = 8;
                return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Next'));

              case 8:
                nextEl = context$5$0.sent;

              case 9:
              case 'end':
                return context$5$0.stop();
            }
          }, null, this);
        });

        var _arr2 = ['tap', 'press', 'longPress'];

        var _loop2 = function () {
          var method = _arr2[_i2];
          it('should perform single ' + method + ' actions', function callee$5$0() {
            var _ref15, x, y, action;

            return _regeneratorRuntime.async(function callee$5$0$(context$6$0) {
              while (1) switch (context$6$0.prev = context$6$0.next) {
                case 0:
                  context$6$0.next = 2;
                  return _regeneratorRuntime.awrap(nextEl.getLocation());

                case 2:
                  _ref15 = context$6$0.sent;
                  x = _ref15.x;
                  y = _ref15.y;
                  action = new _wd2['default'].TouchAction(driver);

                  action[method]({ x: x + 10, y: y + 10 });
                  context$6$0.next = 9;
                  return _regeneratorRuntime.awrap(action.perform());

                case 9:
                  context$6$0.next = 11;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

                case 11:
                case 'end':
                  return context$6$0.stop();
              }
            }, null, this);
          });
          it('should perform single ' + method + ' actions on an element', function callee$5$0() {
            var action;
            return _regeneratorRuntime.async(function callee$5$0$(context$6$0) {
              while (1) switch (context$6$0.prev = context$6$0.next) {
                case 0:
                  action = new _wd2['default'].TouchAction(driver);

                  action[method]({ el: nextEl });
                  context$6$0.next = 4;
                  return _regeneratorRuntime.awrap(action.perform());

                case 4:
                  context$6$0.next = 6;
                  return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@text='1']").should.eventually.exist);

                case 6:
                case 'end':
                  return context$6$0.stop();
              }
            }, null, this);
          });
        };

        for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
          _loop2();
        }
      });
      it('should perform a scroll event', function callee$3$0() {
        var _ref16, startEl, endEl, action;

        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(startListActivity());

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(getScrollData());

            case 4:
              _ref16 = context$4$0.sent;
              startEl = _ref16.startEl;
              endEl = _ref16.endEl;
              action = new _wd2['default'].TouchAction(driver);

              action.press({ el: startEl });
              action.moveTo({ el: endEl });
              action.release();
              context$4$0.next = 13;
              return _regeneratorRuntime.awrap(action.perform());

            case 13:
              context$4$0.next = 15;
              return _regeneratorRuntime.awrap(assertScroll());

            case 15:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
      it('should do multiple scrolls on multiple views', function callee$3$0() {
        var els, actions, multiAction;
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              context$4$0.next = 2;
              return _regeneratorRuntime.awrap(startSplitTouchActivity());

            case 2:
              context$4$0.next = 4;
              return _regeneratorRuntime.awrap(driver.elementsByClassName('android.widget.ListView'));

            case 4:
              els = context$4$0.sent;
              context$4$0.next = 7;
              return _regeneratorRuntime.awrap(_bluebird2['default'].map(els, function callee$4$0(el) {
                var _ref17, height, increment, action, i;

                return _regeneratorRuntime.async(function callee$4$0$(context$5$0) {
                  while (1) switch (context$5$0.prev = context$5$0.next) {
                    case 0:
                      context$5$0.next = 2;
                      return _regeneratorRuntime.awrap(el.getSize());

                    case 2:
                      _ref17 = context$5$0.sent;
                      height = _ref17.height;
                      increment = Math.round((height - 10) / 8);
                      action = new _wd2['default'].TouchAction().press({ element: el });

                      for (i = 0; i < 8; i++) {
                        action.moveTo({ element: el, x: 10, y: -i * increment });
                      }
                      action.release();
                      return context$5$0.abrupt('return', action);

                    case 9:
                    case 'end':
                      return context$5$0.stop();
                  }
                }, null, this);
              }));

            case 7:
              actions = context$4$0.sent;
              multiAction = new _wd2['default'].MultiAction();

              multiAction.add.apply(multiAction, _toConsumableArray(actions));

              context$4$0.next = 12;
              return _regeneratorRuntime.awrap(driver.performMultiAction(multiAction));

            case 12:
              context$4$0.next = 14;
              return _regeneratorRuntime.awrap(_bluebird2['default'].delay(5000));

            case 14:
            case 'end':
              return context$4$0.stop();
          }
        }, null, this);
      });
    });
  });
});

// the last element is the title of the view, and often the
// second-to-last is actually off the screen
//# sourceMappingURL=data:application/json;charset=utf8;base64,
