'use strict';

var _extends = require('babel-runtime/helpers/extends')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _desired = require('../../desired');

var _helpersSession = require('../../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var START_IMG = _path2['default'].resolve('.', 'test', 'functional', 'assets', 'start-button.png');
var STOP_IMG = _path2['default'].resolve('.', 'test', 'functional', 'assets', 'stop-button.png');
var SQUARES_IMG = _path2['default'].resolve('.', 'test', 'functional', 'assets', 'checkered-squares.png');

describe('Find - Image @skip-ci', function () {
  var driver = undefined;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(_extends({}, _desired.APIDEMOS_CAPS, {
            appActivity: ".view.ChronometerDemo"
          })));

        case 2:
          driver = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.updateSettings({
            fixImageTemplateSize: true,
            autoUpdateImageElementPosition: true
          }));

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.quit());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  it('should find image elements', function callee$1$0() {
    var els;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementsByImageFile(START_IMG));

        case 2:
          els = context$2$0.sent;

          els.should.have.length(1);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should find an image element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(START_IMG));

        case 2:
          el = context$2$0.sent;

          el.value.should.match(/appium-image-element/);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should not find an image element that is not matched', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(SQUARES_IMG).should.eventually.be.rejectedWith(/Error response status: 7/));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should find anything with a threshold low enough', function callee$1$0() {
    var _ref, imageMatchThreshold;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.settings());

        case 2:
          _ref = context$2$0.sent;
          imageMatchThreshold = _ref.imageMatchThreshold;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.updateSettings({ imageMatchThreshold: 0 }));

        case 6:
          context$2$0.prev = 6;
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(SQUARES_IMG).should.eventually.exist);

        case 9:
          context$2$0.prev = 9;
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(driver.updateSettings({ imageMatchThreshold: imageMatchThreshold }));

        case 12:
          return context$2$0.finish(9);

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this, [[6,, 9, 13]]);
  });
  it('should be able to get basic element properties', function callee$1$0() {
    var el, size, loc, locInView;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(START_IMG));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.isDisplayed().should.eventually.be['true']);

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(el.getSize());

        case 7:
          size = context$2$0.sent;

          size.width.should.be.above(0);
          size.height.should.be.above(0);
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(el.getLocation());

        case 12:
          loc = context$2$0.sent;

          loc.x.should.be.at.least(0);
          loc.y.should.be.at.least(0);
          context$2$0.next = 17;
          return _regeneratorRuntime.awrap(el.getLocationInView());

        case 17:
          locInView = context$2$0.sent;

          locInView.x.should.eql(loc.x);
          locInView.y.should.eql(loc.y);

        case 20:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should be able to click an element', function callee$1$0() {
    var readout, text, match, secs;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(START_IMG).click());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_bluebird2['default'].delay(3000));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.elementByImageFile(STOP_IMG).click());

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[contains(@text, 'Initial format')]"));

        case 8:
          readout = context$2$0.sent;
          context$2$0.next = 11;
          return _regeneratorRuntime.awrap(readout.text());

        case 11:
          text = context$2$0.sent;
          match = /Initial format: \d\d:(\d\d)/.exec(text);
          secs = parseInt(match[1], 10);

          secs.should.be.above(2);
          secs.should.be.below(20);

        case 16:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});

// use the driver settings that cause the most code paths to be exercised

// start and stop the chronometer using images, and then verify the time
//# sourceMappingURL=data:application/json;charset=utf8;base64,
